{"ast":null,"code":"import _slicedToArray from \"/home/node/app/clima/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/node/app/clima/src/pages/Tab2.tsx\";\nimport { IonContent, IonPage } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\n\nconst Tab2 = () => {\n  const API_KEY = '7cf1d03c7aab53b9a719411f7a699cef';\n  const API_URL = \"http://api.openweathermap.org/data/2.5/weather?lat=-31.6291409&lon=-60.71936410000001&APPID=7cf1d03c7aab53b9a719411f7a699cef\";\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n  /*\n  function componentDidMount() {\n    axios.get(API_URL).then(response => response.data)\n     .then((data) => {\n       setCount(JSON.stringify(data))\n       console.log(\"\"+data.base)\n      })\n    }\n  componentDidMount();\n  */\n\n\n  async function fetchData() {\n    const res = await fetch(API_URL);\n    res.json().then(res => setCount(res)).catch(err => setError(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  });\n  return React.createElement(IonPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(IonContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, JSON.stringify(count)));\n};\n\nexport default Tab2;","map":{"version":3,"sources":["/home/node/app/clima/src/pages/Tab2.tsx"],"names":["IonContent","IonPage","React","useState","useEffect","Tab2","API_KEY","API_URL","count","setCount","error","setError","fetchData","res","fetch","json","then","catch","err","JSON","stringify"],"mappings":";;AAAA,SAMEA,UANF,EAaEC,OAbF,QAsBO,cAtBP;AAwBA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAG,kCAAhB;AACA,QAAMC,OAAO,GAAG,8HAAhB;;AAF2B,oBAGDJ,QAAQ,EAHP;AAAA;AAAA,QAGpBK,KAHoB;AAAA,QAGbC,QAHa;;AAAA,qBAIDN,QAAQ,EAJP;AAAA;AAAA,QAIpBO,KAJoB;AAAA,QAIbC,QAJa;AAK3B;;;;;;;;;;;;AAWF,iBAAeC,SAAf,GAA2B;AACzB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACP,OAAD,CAAvB;AACAM,IAAAA,GAAG,CACAE,IADH,GAEGC,IAFH,CAEQH,GAAG,IAAIJ,QAAQ,CAACI,GAAD,CAFvB,EAGGI,KAHH,CAGSC,GAAG,IAAIP,QAAQ,CAACO,GAAD,CAHxB;AAID;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,CAAT;AAGE,SACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaO,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAAb,CAAT,CADD;AAGD,CA9BD;;AAgCA,eAAeH,IAAf","sourcesContent":["import {\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonText,\n  IonCol,\n  IonItemDivider,\n  IonButton\n} from '@ionic/react';\nimport { sunny, umbrella, rainy, thunderstorm, cloud, call } from 'ionicons/icons';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Tab2: React.FC = () => {\n  const API_KEY = '7cf1d03c7aab53b9a719411f7a699cef';\n  const API_URL = \"http://api.openweathermap.org/data/2.5/weather?lat=-31.6291409&lon=-60.71936410000001&APPID=7cf1d03c7aab53b9a719411f7a699cef\";\n  const [count, setCount] = useState();\n  const [error, setError] = useState();\n  /*\n  function componentDidMount() {\n    axios.get(API_URL).then(response => response.data)\n     .then((data) => {\n       setCount(JSON.stringify(data))\n       console.log(\"\"+data.base)\n      })\n    }\ncomponentDidMount();\n*/\n\nasync function fetchData() {\n  const res = await fetch(API_URL);\n  res\n    .json()\n    .then(res => setCount(res))\n    .catch(err => setError(err));\n}\n\nuseEffect(() => {\n  fetchData();\n});\n  return (\n   <IonPage><IonContent>{JSON.stringify(count)}</IonContent></IonPage>\n  );\n};\n\nexport default Tab2;\n"]},"metadata":{},"sourceType":"module"}